version: '3.9'

services:
  postgres-primary:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: postgres-primary
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: appdb
    volumes:
      - primary-data:/var/lib/postgresql/data
    networks:
      - pgnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-replica1:
    image: postgres:17
    container_name: postgres-replica1
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
    depends_on:
      - postgres-primary
    command: >
      bash -c "
        until pg_isready -h postgres-primary -U admin; do sleep 2; done &&         pg_basebackup -h postgres-primary -D /var/lib/postgresql/data -U admin -Fp -Xs -P -R"
    networks:
      - pgnet
    volumes:
      - replica1-data:/var/lib/postgresql/data

  postgres-replica2:
    image: postgres:17
    container_name: postgres-replica2
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
    depends_on:
      - postgres-primary
    command: >
      bash -c "
        until pg_isready -h postgres-primary -U admin; do sleep 2; done &&         pg_basebackup -h postgres-primary -D /var/lib/postgresql/data -U admin -Fp -Xs -P -R"
    networks:
      - pgnet
    volumes:
      - replica2-data:/var/lib/postgresql/data

  postgres-replica3:
    image: postgres:17
    container_name: postgres-replica3
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
    depends_on:
      - postgres-primary
    command: >
      bash -c "
        until pg_isready -h postgres-primary -U admin; do sleep 2; done &&         pg_basebackup -h postgres-primary -D /var/lib/postgresql/data -U admin -Fp -Xs -P -R"
    networks:
      - pgnet
    volumes:
      - replica3-data:/var/lib/postgresql/data

  pgpool:
    image: bitnami/pgpool:latest
    container_name: pgpool
    restart: always
    environment:
      - PGPOOL_BACKEND_NODES=0:postgres-primary:5432,1:postgres-replica1:5432,2:postgres-replica2:5432,3:postgres-replica3:5432
      - PGPOOL_SR_CHECK_USER=admin
      - PGPOOL_SR_CHECK_PASSWORD=123456
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=admin
      - PGPOOL_POSTGRES_PASSWORD=123456
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=123456
    networks:
      - pgnet
    ports:
      - "5433:5432"

  pgbouncer:
    image: edoburu/pgbouncer
    container_name: pgbouncer
    restart: always
    environment:
      DB_USER: admin
      DB_PASSWORD: 123456
      DB_HOST: pgpool
      DB_PORT: 5432
    ports:
      - "6432:6432"
    networks:
      - pgnet
    volumes:
      - ./pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./userlist.txt:/etc/pgbouncer/userlist.txt

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: 123456
    ports:
      - "8080:80"
    networks:
      - pgnet

volumes:
  primary-data:
  replica1-data:
  replica2-data:
  replica3-data:

networks:
  pgnet:
