services:
  # Primary PostgreSQL node
  postgres-primary:
    image: postgres:17
    container_name: postgres-primary
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=securepassword
      - POSTGRES_DB=mydb
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-primary-data:/var/lib/postgresql/data
      - ./init-primary.sql:/docker-entrypoint-initdb.d/init-primary.sql
    ports:
      - "5432:5432"
    networks:
      - postgres-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Replica 1
  postgres-replica1:
    image: postgres:17
    container_name: postgres-replica1
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=securepassword
      - POSTGRES_DB=mydb
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-replica1-data:/var/lib/postgresql/data
      - ./init-replica.sql:/docker-entrypoint-initdb.d/init-replica.sql
    depends_on:
      - postgres-primary
    networks:
      - postgres-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Replica 2
  postgres-replica2:
    image: postgres:17
    container_name: postgres-replica2
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=securepassword
      - POSTGRES_DB=mydb
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-replica2-data:/var/lib/postgresql/data
      - ./init-replica.sql:/docker-entrypoint-initdb.d/init-replica.sql
    depends_on:
      - postgres-primary
    networks:
      - postgres-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Replica 3
  postgres-replica3:
    image: postgres:17
    container_name: postgres-replica3
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=securepassword
      - POSTGRES_DB=mydb
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-replica3-data:/var/lib/postgresql/data
      - ./init-replica.sql:/docker-entrypoint-initdb.d/init-replica.sql
    depends_on:
      - postgres-primary
    networks:
      - postgres-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Pgpool-II for load balancing
  pgpool:
    image: bitnami/pgpool:4.5.0
    container_name: pgpool
    environment:
      - PGPOOL_BACKEND_HOST0=postgres-primary
      - PGPOOL_BACKEND_PORT0=5432
      - PGPOOL_BACKEND_WEIGHT0=1
      - PGPOOL_BACKEND_FLAG0=ALWAYS_PRIMARY|DISALLOW_TO_FAILOVER
      - PGPOOL_BACKEND_HOST1=postgres-replica1
      - PGPOOL_BACKEND_PORT1=5432
      - PGPOOL_BACKEND_WEIGHT1=1
      - PGPOOL_BACKEND_FLAG1=DISALLOW_TO_FAILOVER
      - PGPOOL_BACKEND_HOST2=postgres-replica2
      - PGPOOL_BACKEND_PORT2=5432
      - PGPOOL_BACKEND_WEIGHT2=1
      - PGPOOL_BACKEND_FLAG2=DISALLOW_TO_FAILOVER
      - PGPOOL_BACKEND_HOST3=postgres-replica3
      - PGPOOL_BACKEND_PORT3=5432
      - PGPOOL_BACKEND_WEIGHT3=1
      - PGPOOL_BACKEND_FLAG3=DISALLOW_TO_FAILOVER
      - PGPOOL_POSTGRES_USERNAME=admin
      - PGPOOL_POSTGRES_PASSWORD=securepassword
      - PGPOOL_ADMIN_USERNAME=pgpool_admin
      - PGPOOL_ADMIN_PASSWORD=pgpool_securepassword
      - PGPOOL_ENABLE_LOAD_BALANCE=yes
      - PGPOOL_NUM_INIT_CHILDREN=50
      - PGPOOL_MAX_POOL=4
    ports:
      - "9999:9999"
    depends_on:
      - postgres-primary
      - postgres-replica1
      - postgres-replica2
      - postgres-replica3
    networks:
      - postgres-net
    healthcheck:
      test: ["CMD-SHELL", "pgpool -n -a /etc/pgpool-II/pcp.conf -m fast status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgBouncer for connection pooling
  pgbouncer:
    image: bitnami/pgbouncer:latest
    container_name: pgbouncer
    environment:
      - POSTGRESQL_HOST=pgpool
      - POSTGRESQL_PORT=9999
      - POSTGRESQL_USERNAME=admin
      - POSTGRESQL_PASSWORD=securepassword
      - POSTGRESQL_DATABASE=mydb
      - PGBOUNCER_AUTH_TYPE=md5
      - PGBOUNCER_AUTH_FILE=/opt/bitnami/pgbouncer/conf/userlist.txt
      - PGBOUNCER_LISTEN_ADDR=0.0.0.0
      - PGBOUNCER_LISTEN_PORT=6432
      - PGBOUNCER_MAX_CLIENT_CONN=100
      - PGBOUNCER_POOL_MODE=transaction
    volumes:
      - ./pgbouncer.ini:/opt/bitnami/pgbouncer/conf/pgbouncer.ini
      - ./userlist.txt:/opt/bitnami/pgbouncer/conf/userlist.txt
    ports:
      - "6432:6432"
    depends_on:
      - pgpool
    networks:
      - postgres-net
    healthcheck:
      test: ["CMD-SHELL", "psql -h pgbouncer -p 6432 -U admin pgbouncer -c 'SHOW POOLS'"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for web-based management
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=adminpassword
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - pgbouncer
    networks:
      - postgres-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/login"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  postgres-net:
    driver: bridge

volumes:
  postgres-primary-data:
  postgres-replica1-data:
  postgres-replica2-data:
  postgres-replica3-data:
  pgadmin-data: